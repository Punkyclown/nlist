#/***************************************************************************
#
# NList.mcc - New List MUI Custom Class
# Registered MUI class, Serial Number: 1d51 0x9d510030 to 0x9d5100A0
#                                           0x9d5100C0 to 0x9d5100FF
#
# Copyright (C) 1996-2001 by Gilles Masson
# Copyright (C) 2001-2005 by NList Open Source Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# NList classes Support Site:  http://www.sf.net/projects/nlist-classes
#
# $Id$
#
#***************************************************************************/

# Programs
CC    = m68k-amigaos-gcc
STRIP = m68k-amigaos-strip
RM    = rm -f
RMDIR = rm -rf
MKDIR = mkdir
CP    = cp

# Directories
OBJDIR    = .obj_os3
BINDIR    = bin_os3

# Compiler/Linker flags
CPU      = -m68020-60 -msoft-float
CDEFS    = -D__NL_VERDATE=\"`date +%d.%m.%Y`\" -D__NL_VERDAYS="`expr \`date +%s\` / 86400 - 2922`"
WARN     = -W -Wall -Wwrite-strings
OPTFLAGS = -O3 -finline-functions -fomit-frame-pointer -funroll-loops
DEBUG    = -O0 -DDEBUG
CFLAGS   = -noixemul -g -I. -I../includes -I.. -c $(CPU) $(WARN) $(OPTFLAGS) $(DEBUG)
LDFLAGS  = -noixemul $(CPU)
LDLIBS   = -lmui -ldebug

# CPU and DEBUG can be defined outside, defaults to above
# using e.g. "make DEBUG= CPU=-m68060" produces optimized non-debug 68060 version
#
# OPTFLAGS are disabled by DEBUG normally!
#
# ignored warnings are:
# none - because we want to compile with -Wall all the time
#

NLIST_DEMO = $(BINDIR)/NList-Demo
NLIST_OBJS = $(OBJDIR)/NList-Demo.o \
             $(OBJDIR)/NList-Demo2.o \
             $(OBJDIR)/NList-Demo3.o

NLISTTREE_DEMO = $(BINDIR)/NListtree-Demo
NLISTTREE_OBJS = $(OBJDIR)/NListtree-Demo.o

#

all: $(BINDIR) $(OBJDIR) $(NLIST_DEMO) $(NLISTTREE_DEMO)

# make the object directories
$(OBJDIR):
	@printf '\033[33mGenerating $@ directory\033[0m\n'
	@$(MKDIR) $(OBJDIR)

# make the binary directories
$(BINDIR):
	@printf '\033[33mGenerating $@ directory\033[0m\n'
	@$(MKDIR) $(BINDIR)

#
$(OBJDIR)/%.o: %.c
	@printf '\033[32mCompiling $<\033[0m\n'
	@$(CC) $(CFLAGS) $< -o $@ -DNO_INLINE_STDARG

#

$(NLIST_DEMO): $(NLIST_OBJS)
	@printf '\033[32mLinking \033[1m$@\033[0m\n'
	@$(CC) $(LDFLAGS) -o $@.debug $(NLIST_OBJS) $(LDLIBS)
	@$(STRIP) -R ".comment" -S -o $@ $@.debug

$(NLISTTREE_DEMO): $(NLISTTREE_OBJS)
	@printf '\033[32mLinking \033[1m$@\033[0m\n'
	@$(CC) $(LDFLAGS) -o $@.debug $(NLISTTREE_OBJS) $(LDLIBS)
	@$(STRIP) -R ".comment" -S -o $@ $@.debug

#

.PHONY: clean
clean:
	-$(RM) $(NLIST_DEMO) $(NLIST_DEMO).debug $(NLIST_OBJS)
	-$(RM) $(NLISTTREE_DEMO) $(NLISTTREE_DEMO).debug $(NLISTTREE_OBJS)

.PHONY: distclean
distclean: clean
	-$(RMDIR) $(OBJDIR)
	-$(RMDIR) $(BINDIR)
